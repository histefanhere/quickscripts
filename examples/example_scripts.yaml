##########################
#
# TITLE:        example_scripts.yaml
# DESCRIPTION:  Example scripts configuration
# AUTHOR:       Stefan Zdravkovic
# LINK:         https://www.github.com/histefanhere/quickscripts
#
##########################

# Here you can specify some additional configuration that will alter the behaviour of the program.
# Obviously, because of this you can't have a quickscript called "config"
config:
  # Here you can define options which will affect all machines:
  awesomeness: 100 # All technology should be awesome!

  # 0 - DEFAULT VALUE - Light mode
  # 1 - Dark mode
  darkmode: 0

  # Use this to replace any occurance of a string with another - look at Example 4 to see this in action
  replace:
    firefox_path: C:\Program Files\Mozilla Firefox\firefox.exe

  # Or you can sub-categorize them by their machine names:
  my_windows_computer:
    # Specifies wether the window will have a border or not. Looks _a lot_ nicer without it, but can be finiky sometimes
    # Depending on your system, you will have to use either 1 or 2.
    # 0 - DEFAULT VALUE - Will have a border and behave as normal.
    # 1 - No border, will also snap to the corner for some reason. LINUX ONLY
    # 2 - No border. WINDOWS ONLY
    borderless: 0

# ALLOWED KEYS: Only the a-z keys have been tested, however more may work.
# BE CAREFUL WHEN PLAYING WITH THIS, ONLY USE KEYS WHICH HAVE BEEN TESTED.


# "Webpages" here is called a group. Groups, well, group scripts togeather
# Use them to better organize all your different scripts.
Webpages:

  ###########
  # EXAMPLE 1
  ###########

  # This is the most basic kind of use, where a key will always trigger the same command.
  # You specify the `key` which will trigger the command, and the `cmd` itself.
  # The same command will be executed across all machines this is configured in.
  # (Most useful if you only have one machine, or a command is identical across mutliple)
  Browser:
    key: b
    cmd: /your/path/to/anything/if/required/firefox.exe

  ###########
  # EXAMPLE 2
  ###########

  # If however you have multiple machines with different OS's on them which run commands differently...
  # ...you can specify the machines names as sub categories to the `cmd`, and each machine will run their...
  # ...coresponding commands.
  Facebook:
    key: f
    cmd:
      my_windows_computer: C:\Program Files\facebook.exe
      my_linux_machine: sh /home/user/games/facebook.sh


# Here's another group that I've called "games" to group all my games togeather.
Games:

  ###########
  # EXAMPLE 3
  ###########

  # You may also have some scripts which you only have on one machine. In that case, you can _only_ specify...
  # ...that machine and the quickscript will not be visible on all other machines.
  The Best Video Game:
    key: v
    cmd:
      my_windows_computer: C:\Program Files\TheBestVideoGame.exe


  # Notice here how we're able to use the key "f" despite using the f key previously for the Facebook script.
  # That's because it's in a different group!
  Fire Boy % Water Girl:
    key: f
    cmd:
      my_windows_computer: $firefox_path www.miniclip.com

###########
# EXAMPLE 4
###########

# This is an example of how you can use the `replace` config to shorten your configuration file and make it more readable!
some_website_1:
  key: x
  cmd:
    # Here, $firefox_path will be replaced with the defined string we set in the beginning of the file. Note the dollar sign!
    my_windows_computer: $firefox_path www.some_website_1.com

some_website_2:
  key: y
  cmd:
    # Same here. The dollar sign tells the code to replace it. Without it, the string would literally mean "firefox_path"
    my_windows_computer: $firefox_path www.some_website_2.com